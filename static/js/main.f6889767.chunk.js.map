{"version":3,"sources":["Components/Navigation/Navigation.module.css","Components/ContactForm/ContactForm.module.css","Components/LoginForm/LoginForm.module.css","Components/ContactList/ContactList.module.css","Components/Filter/Filter.module.css","redux/Contacts/contacts-actions.js","Services/contactsAPI.js","redux/Contacts/contacts-operations.js","Services/userAPI.js","redux/Users/users-operations.js","redux/Contacts/contacts-reducers.js","redux/Users/users-slice.js","redux/store.js","redux/Users/users-selectors.js","Components/Navigation/Navigation.js","redux/Contacts/contacts-selectors.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","Components/ContactForm/ContactForm.js","Views/PhonebookView/PhonebookView.js","Views/HomeView/HomeView.js","Components/LoginForm/LoginForm.js","Views/LoginView/LoginView.js","Components/RegistrationForm/RegistrationForm.js","Views/RegistrationView/RegistrationView.js","Routes/PublicRoute.js","Routes/PrivateRoute.js","Images/web.jpg","App.js","index.js"],"names":["module","exports","filter","createAction","fetchContactsNew","a","axios","get","data","addContactNew","name","number","contact","post","deleteContactsNew","id","delete","target","addContact","createAsyncThunk","contactsAPI","contacts","deleteContact","fetchContacts","registerUser","email","password","user","loginUser","currentUser","defaults","baseURL","token","headers","common","Authorization","addUser","rejectWithValue","userAPI","message","_","getState","state","persistedToken","auth","logoutUser","contactList","createReducer","fulfilled","action","payload","console","log","actions","loading","rejected","pending","combineReducers","authSlice","createSlice","initialState","error","isLoading","isAuth","isRefreshing","reducers","extraReducers","middleware","getDefaultMiddleware","serializableCheck","persistConfig","key","storage","whitelist","persistedReducer","persistReducer","store","configureStore","reducer","contactReducer","devTools","process","persistor","persistStore","isAuthorized","getUserName","getIsRefreshing","Navigation","useSelector","username","isReloading","active","color","textDecoration","fontWeight","notActive","dispatch","useDispatch","className","s","navigation","navMenuAuth","navMenuItems","to","style","isActive","navMenuSentense","type","addBtn","onClick","navMenuUnAuth","navMenuThumb","navMenuSentenseUnAuth","getContacts","getLoading","normalizedContact","getFilter","loweredFilter","toLowerCase","includes","connect","useEffect","height","width","map","contactName","contactNumber","handler","e","value","label","inputTitle","input","onChange","onSubmit","useState","setName","setNumber","handleChange","resetForm","nameId","uuidv4","numberId","form","preventDefault","find","alert","htmlFor","pattern","title","required","PhonebookView","HomeView","setPassword","setEmail","passwordId","emailId","LoginView","RegistrationView","PublicRoute","C","component","PrivateRoute","App","backgroundImage","web","backgroundRepeat","backgroundSize","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f6889767.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation\":\"Navigation_navigation__df6NC\",\"link\":\"Navigation_link__3zPa8\",\"activeLink\":\"Navigation_activeLink__1bFH1\",\"addBtn\":\"Navigation_addBtn__2uvyj\",\"navMenuAuth\":\"Navigation_navMenuAuth__11nrh\",\"navMenuUnAuth\":\"Navigation_navMenuUnAuth__1AwFS\",\"navMenuThumb\":\"Navigation_navMenuThumb__3Gr3n\",\"navMenuSentense\":\"Navigation_navMenuSentense___oqQY\",\"navMenuSentenseUnAuth\":\"Navigation_navMenuSentenseUnAuth__26CBm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__39QJQ\",\"label\":\"ContactForm_label__d8uTw\",\"input\":\"ContactForm_input__OKcfL\",\"addBtn\":\"ContactForm_addBtn__qDgyp\",\"inputTitle\":\"ContactForm_inputTitle__3Z0Rz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"LoginForm_form__3zC_V\",\"label\":\"LoginForm_label__13Vg0\",\"input\":\"LoginForm_input__74Zg-\",\"addBtn\":\"LoginForm_addBtn__1vinj\",\"inputTitle\":\"LoginForm_inputTitle__QyHDF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactList_contacts__1lgXp\",\"addBtn\":\"ContactList_addBtn__4XNna\",\"contactName\":\"ContactList_contactName__1uio5\",\"contactNumber\":\"ContactList_contactNumber__2MSN3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__McyEW\",\"inputTitle\":\"Filter_inputTitle__15ySN\",\"input\":\"Filter_input__KsL5B\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const addContactRequest = createAction(\"contacts/addRequest\")\r\nexport const addContactSuccess = createAction(\"contacts/addSuccess\")\r\nexport const addContactFail = createAction(\"contacts/addFail\")\r\n\r\nexport const deleteContactRequest = createAction(\"contacts/deleteRequest\")\r\nexport const deleteContactSuccess = createAction(\"contacts/deleteSuccess\")\r\nexport const deleteContactFail = createAction(\"contacts/deleteFail\")\r\n\r\nexport const fetchContactsRequest = createAction(\"contacts/fetchRequest\")\r\nexport const fetchContactsSuccess = createAction(\"contacts/fetchSuccess\")\r\nexport const fetchContactsFail = createAction(\"contacts/fetchFail\")\r\n\r\nexport const filter = createAction(\"contacts/filter\")\r\nexport const deleteContact = createAction(\"contacts/delete\")\r\n\r\n\r\n\r\n\r\n","import axios from 'axios'\r\n\r\n// axios.defaults.baseURL = 'https://6193c189d3ae6d0017da8819.mockapi.io'\r\n\r\n\r\n\r\nexport async function fetchContactsNew() {\r\n    const { data } = await axios.get('/contacts')\r\n    return data\r\n}\r\n\r\nexport async function addContactNew({ name, number }) {\r\n    const contact = { name, number };\r\n    const data = axios.post('/contacts', contact)\r\n    return data\r\n}\r\n\r\nexport async function deleteContactsNew(id) {\r\n    const { data } = await axios.delete(`/contacts/${id.target.id}`);\r\n    return data;\r\n}\r\n\r\n","import { createAsyncThunk, } from '@reduxjs/toolkit'\r\nimport * as contactsAPI from '../../Services/contactsAPI'\r\n\r\n\r\nexport const addContact = createAsyncThunk(\r\n    \"contacts/addContact\",\r\n    async ({ name, number }) => {\r\n        const contacts = await contactsAPI.addContactNew({ name, number })\r\n        return contacts;\r\n    }\r\n);\r\nexport const deleteContact = createAsyncThunk(\r\n    \"contacts/deleteContacts\",\r\n    async (id) => {\r\n        await contactsAPI.deleteContactsNew(id)\r\n\r\n\r\n        return id\r\n    }\r\n)\r\n\r\nexport const fetchContacts = createAsyncThunk(\r\n    \"contacts/fetchContacts\",\r\n    async () => {\r\n        const contacts = await contactsAPI.fetchContactsNew()\r\n        return contacts;\r\n    }\r\n);\r\n\r\n","import axios from 'axios'\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com/'\r\n\r\nexport async function registerUser({ name, email, password },) {\r\n\r\n    const user = { name, email, password };\r\n    const data = axios.post('/users/signup', user)\r\n    return data\r\n}\r\n\r\nexport async function loginUser({ email, password }) {\r\n    const user = { email, password };\r\n    const data = axios.post('/users/login', user)\r\n    return data\r\n}\r\nexport async function currentUser() {\r\n\r\n    const data = axios.get('/users/current',)\r\n    return data\r\n}","\r\nimport { createAsyncThunk, } from '@reduxjs/toolkit'\r\nimport * as userAPI from '../../Services/userAPI'\r\nimport axios from 'axios'\r\n\r\n\r\nconst token = {\r\n    set(token) {\r\n        axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n    },\r\n    unset() {\r\n        axios.defaults.headers.common.Authorization = '';\r\n    },\r\n};\r\n\r\nexport const addUser = createAsyncThunk(\r\n    \"user/registration\",\r\n    async ({ name, email, password }, { rejectWithValue }) => {\r\n        try {\r\n            const user = await userAPI.registerUser({ name, email, password })\r\n            token.set(user.data.token)\r\n\r\n            return user;\r\n        }\r\n        catch (error) {\r\n            return rejectWithValue(error.message)\r\n        }\r\n    }\r\n);\r\nexport const loginUser = createAsyncThunk(\r\n    \"user/login\",\r\n    async ({ email, password }, { rejectWithValue }) => {\r\n        try {\r\n            const user = await userAPI.loginUser({ email, password },)\r\n\r\n            token.set(user.data.token)\r\n\r\n            return user;\r\n        }\r\n        catch (error) {\r\n            return rejectWithValue(error.message)\r\n        }\r\n    }\r\n);\r\n\r\nexport const currentUser = createAsyncThunk(\r\n    \"user/current\",\r\n    async (_, { rejectWithValue, getState }) => {\r\n        const state = getState()\r\n        const persistedToken = state.auth.token;\r\n        if (persistedToken === null) {\r\n            return rejectWithValue()\r\n        }\r\n        token.set(persistedToken);\r\n        try {\r\n            const user = await userAPI.currentUser()\r\n            return user;\r\n        }\r\n        catch (error) {\r\n            return rejectWithValue(error.message)\r\n        }\r\n    }\r\n);\r\n\r\nexport const logoutUser = createAsyncThunk(\r\n    'auth/logout',\r\n    async (_, { rejectWithValue },) => {\r\n\r\n        try {\r\n            await axios.post('/users/logout');\r\n            token.unset();\r\n        } catch (error) {\r\n            return rejectWithValue(error.message);\r\n        }\r\n    },\r\n)","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport * as actions from \"./contacts-actions\";\r\nimport { fetchContacts, addContact, deleteContact, } from \"./contacts-operations\"\r\nimport { addUser } from '../Users/users-operations'\r\n\r\n\r\n// const initState = [];\r\n\r\nconst initState = {\r\n  contactsList: [],\r\n  filter: '',\r\n  isLoading: false,\r\n}\r\n\r\n\r\nconst contactList = createReducer(initState.contactsList, {\r\n\r\n  [fetchContacts.fulfilled]: (state, action) => {\r\n    return action.payload\r\n  },\r\n  [addContact.fulfilled]: (state, action) => {\r\n\r\n    return [...state, action.payload.data];\r\n\r\n  },\r\n\r\n\r\n  [deleteContact.fulfilled]: (state, action) => {\r\n    console.log(action.payload.target.id);\r\n    const newState = state.filter(\r\n      (contact) => contact.id !== action.payload.target.id\r\n    );\r\n    return newState;\r\n  },\r\n});\r\n\r\n\r\nconst filter = createReducer(\"\", {\r\n  [actions.filter]: (_, action) => action.payload,\r\n});\r\n\r\nconst loading = createReducer(false, { [addContact.fulfilled]: () => false, [addContact.rejected]: () => false, [addContact.pending]: () => true, [deleteContact.fulfilled]: () => false, [deleteContact.rejected]: () => false, [deleteContact.pending]: () => true, [fetchContacts.fulfilled]: () => false, [fetchContacts.rejected]: () => false, [fetchContacts.pending]: () => true, [addUser.fulfilled]: () => false, [addUser.rejected]: () => false, [addUser.pending]: () => true, })\r\n\r\n\r\n\r\nexport default combineReducers({\r\n  contacts: contactList,\r\n  filter: filter,\r\n  loading: loading,\r\n});\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { addUser, loginUser, currentUser, logoutUser } from \"./users-operations\"\r\n\r\n\r\nconst authSlice = createSlice({\r\n    name: \"auth\",\r\n    initialState: {\r\n        user: { name: \"\", email: \"\" },\r\n        token: \"\",\r\n        error: null,\r\n        isLoading: false,\r\n        isAuth: false,\r\n        isRefreshing: false\r\n    },\r\n    reducers: {},\r\n    extraReducers: {\r\n        [addUser.pending](state, action) {\r\n            state.isLoading = true\r\n        },\r\n        [addUser.fulfilled](state, action) {\r\n            state.isLoading = false\r\n            state.isAuth = true\r\n            state.user = action.payload.data.user\r\n            state.token = action.payload.data.token\r\n        },\r\n        [addUser.rejected](state, action) {\r\n            state.isLoading = false\r\n            state.error = action.payload\r\n        },\r\n        [loginUser.fulfilled](state, action) {\r\n            state.isLoading = false\r\n            state.isAuth = true\r\n            state.user = action.payload.data.user\r\n            state.token = action.payload.data.token\r\n            state.error = null\r\n        },\r\n        [loginUser.pending](state, action) {\r\n            state.isLoading = true\r\n        },\r\n        [loginUser.rejected](state, action) {\r\n            state.isLoading = false\r\n            state.error = action.payload\r\n            state.user = ''\r\n            state.token = ''\r\n        },\r\n        [currentUser.pending](state, action) {\r\n            state.isLoading = true\r\n            state.isRefreshing = true\r\n\r\n        },\r\n        [currentUser.fulfilled](state, action) {\r\n            state.isLoading = false\r\n            state.user = action.payload.data\r\n            state.isAuth = true\r\n            state.isRefreshing = false\r\n        },\r\n        [currentUser.rejected](state, action) {\r\n            state.isLoading = false\r\n            state.user = ''\r\n            state.token = ''\r\n            state.isAuth = false\r\n            state.error = action.payload\r\n            state.isRefreshing = false\r\n        },\r\n        [logoutUser.pending](state, action) {\r\n            state.isLoading = true\r\n\r\n        },\r\n        [logoutUser.fulfilled](state, action) {\r\n            state.isLoading = false\r\n            state.user = ''\r\n            state.token = ''\r\n            state.isAuth = false\r\n        },\r\n        [logoutUser.rejected](state, action) {\r\n            state.isLoading = false\r\n            state.isAuth = true\r\n            state.error = action.payload\r\n            // state.user = ''\r\n            // state.token = ''\r\n        },\r\n    }\r\n})\r\n\r\nexport default authSlice.reducer","\r\nimport contactReducer from \"../redux/Contacts/contacts-reducers\";\r\nimport auth from \"./Users/users-slice\"\r\nimport {\r\n  configureStore,\r\n  getDefaultMiddleware,\r\n} from \"@reduxjs/toolkit\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  // FLUSH,\r\n  // REHYDRATE,\r\n  // PAUSE,\r\n  // PERSIST,\r\n  // PURGE,\r\n  // REGISTER,\r\n\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: false\r\n  }),\r\n];\r\n\r\n\r\n\r\n\r\nconst persistConfig = {\r\n  key: \"auth\",\r\n  storage,\r\n  whitelist: [\"token\"]\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, auth);\r\n\r\nexport const store = configureStore({\r\n  reducer: { auth: persistedReducer, contacts: contactReducer },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","\r\n\r\nexport const isAuthorized = state => state.auth.isAuth\r\nexport const isLoading = state => state.auth.isLoading\r\nexport const getUserName = state => state.auth.user.name\r\nexport const getIsRefreshing = state => state.auth.isRefreshing\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { logoutUser } from \"../../redux/Users/users-operations\"\r\nimport { useSelector } from \"react-redux\";\r\nimport { isAuthorized, getIsRefreshing } from '../../redux/Users/users-selectors'\r\nimport { getUserName } from '../../redux/Users/users-selectors'\r\nimport s from \"./Navigation.module.css\";\r\n\r\n\r\n\r\n\r\n\r\nconst Navigation = () => {\r\n    const isAuth = useSelector(isAuthorized)\r\n    const username = useSelector(getUserName)\r\n    const isReloading = useSelector(getIsRefreshing)\r\n    const active = {\r\n        color: '#ffffff',\r\n        textDecoration: 'none',\r\n        fontWeight: 700,\r\n    }\r\n    const notActive = {\r\n        color: '#00008b',\r\n        textDecoration: 'none',\r\n        fontWeight: 700,\r\n    }\r\n    const dispatch = useDispatch()\r\n    const handleLogOut = () => {\r\n        dispatch(logoutUser())\r\n    }\r\n\r\n    return (\r\n        !isReloading &&\r\n        <div className={s.navigation}>\r\n            {isAuth ?\r\n                <>\r\n                    <ul className={s.navMenuAuth}>\r\n                        <li className={s.navMenuItems}><NavLink to=\"/contacts\" style={({ isActive }) => isActive ? active : notActive}>Contacts</NavLink></li>\r\n                        <li className={s.navMenuItems}><NavLink to=\"/\" style={({ isActive }) => isActive ? active : notActive}>Home</NavLink></li>\r\n                        <li className={s.navMenuItems}><p className={s.navMenuSentense}>Welcome, <span className={s.username}>{username}</span></p></li>\r\n                        <li className={s.navMenuItems}><button type=\"button\" className={s.addBtn} onClick={handleLogOut}>Log Out</button></li>\r\n                    </ul>\r\n                </> :\r\n                <>\r\n                    <ul className={s.navMenuUnAuth}>\r\n                        <li>\r\n                            <div className={s.navMenuThumb}>\r\n                                <p className={s.navMenuSentenseUnAuth}>Please</p>\r\n                                <NavLink to=\"/login\" style={({ isActive }) => isActive ? active : notActive} >Log In </NavLink>\r\n                            </div >\r\n                        </li>\r\n                        <li>\r\n                            <div className={s.navMenuThumb}>\r\n                                <p className={s.navMenuSentenseUnAuth}>or</p>\r\n                                <NavLink to=\"/register\" style={({ isActive }) => isActive ? active : notActive} >Register</NavLink>\r\n                            </div>\r\n                        </li>\r\n                    </ul>\r\n\r\n\r\n                </>\r\n            }\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Navigation;","\r\n\r\n\r\nexport const getContacts = state => state.contacts.contacts\r\nexport const getFilter = state => state.contacts.filter\r\nexport const getLoading = state => state.contacts.loading\r\n\r\nexport const getUser = state => state.user\r\n\r\n\r\n\r\nexport const normalizedContact = state => {\r\n    const filter = getFilter(state)\r\n    const contacts = getContacts(state)\r\n    const loweredFilter = filter.toLowerCase()\r\n    return contacts.filter((contact) =>\r\n        contact.name.toLowerCase().includes(loweredFilter))\r\n}","import s from \"./ContactList.module.css\";\r\nimport { useEffect, } from 'react'\r\nimport { connect, } from \"react-redux\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { normalizedContact, getLoading } from '../../redux/Contacts/contacts-selectors'\r\nimport { addContact, deleteContact, fetchContacts } from '../../redux/Contacts/contacts-operations'\r\n\r\n\r\nfunction ContactList({ contacts, deleteContact, fetchContacts, isLoading }) {\r\n\r\n\r\n  useEffect(() => {\r\n    fetchContacts()\r\n  }, [fetchContacts]);\r\n\r\n  return (\r\n    <>\r\n      {isLoading && <Loader type=\"Bars\" color=\"#00008B\" height={120} width={120} />}\r\n      {contacts.map((contact) => (\r\n        <div className={s.contacts} key={contact.id}>\r\n          <p id={contact.id} className={s.contactName}>\r\n            {contact.name}\r\n          </p>\r\n          <p className={s.contactNumber}>{contact.number}</p>\r\n          <button className={s.addBtn} id={contact.id} onClick={deleteContact}>\r\n            Delete\r\n          </button>\r\n\r\n        </div>\r\n      ))}\r\n\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: normalizedContact(state),\r\n  isLoading: getLoading(state)\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addContact: () => dispatch(addContact()),\r\n  deleteContact: (id) => dispatch(deleteContact(id)),\r\n  fetchContacts: () => dispatch(fetchContacts())\r\n\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import { connect, } from \"react-redux\";\r\nimport * as actions from \"../../redux/Contacts/contacts-actions\";\r\nimport s from \"./Filter.module.css\";\r\n\r\nfunction Filter({ data, handler }) {\r\n  return (\r\n    <label className={s.label}>\r\n      <p className={s.inputTitle}>Find</p>\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={data}\r\n        onChange={handler}\r\n      ></input>\r\n    </label>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  data: state.filter,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  handler: (e) => dispatch(actions.filter(e.target.value))\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport s from \"./ContactForm.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { addContact, deleteContact } from '../../redux/Contacts/contacts-operations'\r\nimport { getContacts } from '../../redux/Contacts/contacts-selectors'\r\n\r\nfunction ContactForm({ onSubmit, contacts }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  const submit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (\r\n      contacts.find((contact) => {\r\n\r\n        return contact.name === name;\r\n      })\r\n    ) {\r\n      alert(`Sorry, contact ${name} already existing`);\r\n      resetForm();\r\n      return\r\n    };\r\n    onSubmit({ name, number });\r\n    resetForm();\r\n  }\r\n\r\n  const nameId = uuidv4();\r\n  const numberId = uuidv4();\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={submit}>\r\n      <label className={s.label} htmlFor={nameId}>\r\n        <p className={s.inputTitle}>Name</p>\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          value={name}\r\n          id={nameId}\r\n          onChange={handleChange}\r\n        ></input>\r\n      </label>\r\n      <label className={s.label} htmlFor={numberId}>\r\n        <p className={s.inputTitle}>Phone</p>\r\n        <input\r\n          className={s.input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          value={number}\r\n          id={numberId}\r\n          onChange={handleChange}\r\n        ></input>\r\n      </label>\r\n      <button className={s.addBtn} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  contacts: getContacts(state)\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onSubmit: ({ name, number }) =>\r\n    dispatch(addContact({ name, number })),\r\n  deleteContact: (id) => dispatch(deleteContact(id))\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import ContactList from \"../../Components/ContactList/\";\r\nimport Filter from \"../../Components/Filter\";\r\nimport ContactForm from \"../../Components/ContactForm\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getIsRefreshing } from '../../redux/Users/users-selectors'\r\n\r\n\r\n\r\nconst PhonebookView = () => {\r\n    const isReloading = useSelector(getIsRefreshing)\r\n    return (\r\n        !isReloading && <>\r\n            <div className=\"PhonebookView\">\r\n                <h1>Phonebook</h1>\r\n                <ContactForm />\r\n                <Filter />\r\n                <h2>Contacts</h2>\r\n                <ContactList />\r\n            </div>\r\n        </>)\r\n}\r\n\r\nexport default PhonebookView","const HomeView = () => {\r\n    return (\r\n        <h1>Home</h1>\r\n    )\r\n}\r\n\r\nexport default HomeView","import { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport s from \"./LoginForm.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser, } from '../../redux/Users/users-operations'\r\n\r\n\r\nfunction LoginForm({ onSubmit, contacts }) {\r\n  const [password, setPassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    switch (name) {\r\n      case \"password\":\r\n        setPassword(value);\r\n        break;\r\n      case \"email\":\r\n        setEmail(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setPassword(\"\");\r\n    setEmail(\"\");\r\n  };\r\n\r\n  const submit = (e) => {\r\n    e.preventDefault();\r\n    onSubmit({ email, password, });\r\n    resetForm();\r\n  }\r\n\r\n  const passwordId = uuidv4();\r\n  const emailId = uuidv4();\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={submit}>\r\n      <label className={s.label} htmlFor={emailId}>\r\n        <p className={s.inputTitle}>E-mail</p>\r\n        <input\r\n          className={s.input}\r\n          type=\"mail\"\r\n          name=\"email\"\r\n\r\n          title=\"e-mail\"\r\n          required\r\n          value={email}\r\n          id={emailId}\r\n          onChange={handleChange}\r\n        ></input>\r\n      </label>\r\n      <label className={s.label} htmlFor={passwordId}>\r\n        <p className={s.inputTitle}>Password</p>\r\n        <input\r\n          className={s.input}\r\n          type=\"password\"\r\n          name=\"password\"\r\n\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          value={password}\r\n          id={passwordId}\r\n          onChange={handleChange}\r\n        ></input>\r\n      </label>\r\n\r\n      <button className={s.addBtn} type=\"submit\">\r\n        Enter\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n// const mapStateToProps = (state) => ({\r\n//   contacts: getContacts(state)\r\n// });\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onSubmit: ({ email, password, }) =>\r\n    dispatch(loginUser({ email, password, })),\r\n  // deleteContact: (id) => dispatch(deleteContact(id))\r\n});\r\nexport default connect(null, mapDispatchToProps)(LoginForm);\r\n// export default LoginForm\r\n\r\n","import LoginForm from '../../Components/LoginForm'\r\nimport { useSelector } from \"react-redux\";\r\nimport { getIsRefreshing } from '../../redux/Users/users-selectors'\r\nconst LoginView = () => {\r\n    const isReloading = useSelector(getIsRefreshing)\r\n    // console.log(isReloading);\r\n    return (\r\n        !isReloading &&\r\n        <>\r\n            <LoginForm />\r\n        </>\r\n    )\r\n}\r\nexport default LoginView","import { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport s from \"./RegistrationForm.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { addUser, } from '../../redux/Users/users-operations'\r\n\r\n\r\nconst RegistrationForm = ({ onSubmit, }) => {\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        switch (name) {\r\n            case \"name\":\r\n                setName(value);\r\n                break;\r\n            case \"password\":\r\n                setPassword(value);\r\n                break;\r\n            case \"email\":\r\n                setEmail(value);\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n    };\r\n\r\n    const resetForm = () => {\r\n        setName(\"\");\r\n        setPassword(\"\");\r\n        setEmail(\"\");\r\n    };\r\n\r\n    const submit = (e) => {\r\n        e.preventDefault();\r\n        onSubmit({ name, email, password });\r\n        resetForm();\r\n    }\r\n\r\n    const nameId = uuidv4();\r\n    const passwordId = uuidv4();\r\n    const emailId = uuidv4();\r\n\r\n\r\n    return (\r\n        <>\r\n            <form className={s.form} onSubmit={submit}>\r\n                <label className={s.label} htmlFor={nameId}>\r\n                    <p className={s.inputTitle}>Name</p>\r\n                    <input\r\n                        className={s.input}\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        // pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        // title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                        required\r\n                        value={name}\r\n                        id={nameId}\r\n                        onChange={handleChange}\r\n                    ></input>\r\n                </label>\r\n                <label className={s.label} htmlFor={emailId}>\r\n                    <p className={s.inputTitle}>E-mail</p>\r\n                    <input\r\n                        className={s.input}\r\n                        type=\"mail\"\r\n                        name=\"email\"\r\n                        // pattern=\"[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\"\r\n                        title=\"e-mail\"\r\n                        required\r\n                        value={email}\r\n                        id={emailId}\r\n                        onChange={handleChange}\r\n                    ></input>\r\n                </label>\r\n                <label className={s.label} htmlFor={passwordId}>\r\n                    <p className={s.inputTitle}>Password</p>\r\n                    <input\r\n                        className={s.input}\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        // pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                        // title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                        required\r\n                        value={password}\r\n                        id={passwordId}\r\n                        onChange={handleChange}\r\n                    ></input>\r\n                </label>\r\n                <button className={s.addBtn} type=\"submit\">\r\n                    Register\r\n                </button>\r\n            </form></>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// const mapStateToProps = (state) => ({\r\n//     contacts: getContacts(state)\r\n// });\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    onSubmit: ({ name, email, password }) =>\r\n        dispatch(addUser({ name, email, password })),\r\n    // deleteContact: (id) => dispatch(deleteContact(id))\r\n});\r\nexport default connect(null, mapDispatchToProps)(RegistrationForm);\r\n\r\n\r\n\r\n// export default RegistrationForm","import RegistrationForm from '../../Components/RegistrationForm'\r\n\r\n\r\nconst RegistrationView = () => {\r\n    return (<>\r\n        <h1>Please Register</h1>\r\n        <RegistrationForm />\r\n    </>)\r\n}\r\nexport default RegistrationView","import { Navigate } from \"react-router\"\r\nimport { useSelector } from \"react-redux\";\r\nimport { isAuthorized } from \"../redux/Users/users-selectors\"\r\n\r\n\r\nexport function PublicRoute({ component: C, }) {\r\n    const isAuth = useSelector(isAuthorized)\r\n    return <>\r\n\r\n        {isAuth ? <Navigate to=\"/contacts\" /> : <C />}\r\n\r\n        {/* <C /> */}\r\n    </>\r\n}","import { Navigate } from \"react-router\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { isAuthorized } from \"../redux/Users/users-selectors\"\r\n\r\nexport function PrivateRoute({ component: C, }) {\r\n    const isAuth = useSelector(isAuthorized)\r\n    return (<>\r\n\r\n        {isAuth ? <C /> : <Navigate to=\"/login\" />}\r\n\r\n\r\n    </>)\r\n}","export default __webpack_public_path__ + \"static/media/web.6cb4c735.jpg\";","import React from \"react\";\r\nimport { Route, Routes, } from \"react-router-dom\";\r\n\r\nimport \"./App.css\";\r\n\r\nimport Navigation from \"./Components/Navigation/Navigation\";\r\nimport PhonebookView from \"./Views/PhonebookView\";\r\nimport HomeView from './Views/HomeView'\r\nimport LoginView from './Views/LoginView'\r\nimport RegistrationView from './Views/RegistrationView'\r\nimport { PublicRoute } from './Routes/PublicRoute'\r\nimport { PrivateRoute } from './Routes/PrivateRoute'\r\nimport { useDispatch, } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport { currentUser } from './redux/Users/users-operations'\r\nimport web from \"./Images/web.jpg\"\r\n\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    dispatch(currentUser())\r\n  })\r\n\r\n\r\n\r\n  return (\r\n\r\n\r\n    <div className=\"App\" style={{\r\n      backgroundImage: `url(${web})`, backgroundRepeat: 'no-repeat',\r\n      backgroundSize: 'cover',\r\n    }}>\r\n      <Navigation />\r\n\r\n      <Routes>\r\n        <Route path=\"/\" element={<PrivateRoute component={HomeView} />} />\r\n\r\n        <Route path=\"/login\" element={<PublicRoute component={LoginView} />} />\r\n\r\n        <Route path=\"/register\" element={<PublicRoute component={RegistrationView} />} />\r\n\r\n        <Route path=\"/contacts\" element={<PrivateRoute component={PhonebookView} />} />\r\n\r\n      </Routes>\r\n      {/* <img src={web} alt={'Web'}></img> */}\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default App","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport { Provider } from \"react-redux\";\r\n// import { store, } from \"./redux/store\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport { store, persistor } from \"./redux/store\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <BrowserRouter>\r\n          <App />\r\n        </BrowserRouter>\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}